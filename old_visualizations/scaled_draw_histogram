# Fancy new script

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

forest_table = pd.read_hdf('/data/a/cpac/aurora/reducedtrees0.h5', 'ft')
z0 = forest_table.mass.loc[forest_table.snap_num == 99]
z0_masses = np.array(z0*2.7e9)

nbins = 100 # How many bins do you want
logM_max = 14.5 # Power of upper bound
logM_min = 11.5 # Power of lower bound
dlogM = (logM_max - logM_min)/nbins
vol = 256**3

hist, mass_edges = np.histogram(z0_masses, np.logspace(logM_min, logM_max, nbins + 1, endpoint=True))
scaled_hist = hist/(dlogM*vol)
#mass_mean = 10**(0.5*(np.log10(mass_edges[:-1]) + np.log10(mass_edges[1:])))
mass_mean = 0.5*(mass_edges[:-1] + mass_edges[1:])

fig, ax = plt.subplots()
ax.plot(mass_mean, scaled_hist)
ax.set(xscale = 'log', yscale = 'log')
ax.set_title("Mass distribution, scaled by dlogM/vol, 2")
ax.set_xlabel(r"$M_\mathrm{FOF}$ [$h^{-1}M_\odot$]")
ax.set_ylabel(r"$dn / \mathrm{dlog}M$ [$h$Mpc$^{-1}$]")
#ax.set_ylabel("Frequency (dn/dlogM)")
#ax.set_xlabel("Mass (M_sun/h)")
fig.savefig('scaled_hist_version1.png')
