# Draw a histogram of masses from the forest table

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

forest_table = pd.read_hdf('/data/a/cpac/aurora/reducedtrees0.h5', 'ft')
z0_table = forest_table.mass.loc[forest_table.snap_num == 99] # only use z = 0
z0_masses_norm = z0_table.array # These are still normalized by a factor of 2.7e9
z0_masses = z0_masses_norm * 2.7e9 # Unscale them -- masses now have noremal units!

#Take a look at the statistics
z0_masses.min()
z0_masses.max()
z0_masses.mean()

#Draw a histogram
n_bins = 120
cluster_bins = np.logspace(9.5, 14.5, n_bins, endpoint=True)
dlogM = (14.5 - 9.5)/120
vol = 3400**3
cluster_range = (0, 6e11)

fig, ax = plt.subplots(1,2, figsize=(10, 5))

ax[0].hist(z0_masses, range = cluster_range, bins = 'auto')
ax[0].set_xlabel("Mass (M_sun/h)")
ax[0].set_ylabel("Frequency")
ax[0].set_title("Linear scale (clipped at M = 6e11)")

#(ax[1].hist(z0_masses, bins = cluster_bins, log = True))/(dlogM*vol)
ax[1].hist(z0_masses, bins = cluster_bins, log = True)
ax[1].set_xscale('log', nonposx = 'clip')
ax[1].set_xlabel("Mass (M_sun/h)")
ax[1].set_ylabel("Frequency")
ax[1].set_title("Log scale")

fig.suptitle("Mass Distribution at z = 0")
fig.savefig("histogram_" + str(n_bins) + ".png")
fig.show()

# Notes
# You might need to set range to something other than min and max;
# there are some non-negligible outliers out there. Use masses.mean()
# to guide that decision.
# You can also set a range for the y-axis using plt.ylim((lower_lim, upper_lim)
